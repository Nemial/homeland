{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }}[]|\Cake\Collection\CollectionInterface ${{ pluralVar }}
 */
?>
<div class="d-flex flex-column justify-content-between">
    <div class="d-flex justify-content-between">
        <h1><?= __('{{ pluralHumanName }}') ?></h1>
        <?= $this->Html->link(__('New {{ singularHumanName }}'), ['action' => 'add'], ['class' =>
        'align-self-center']) ?>
    </div>
    {% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}
    {% set done = [] %}
    <table class="table">
        <thead>
        <tr class="text-center">
            {% for field in fields %}
                <th scope="col"><?= $this->Paginator->sort('{{ field }}') ?></th>
            {% endfor %}
            <th scope="col"><?= __('Действия') ?></th>
        </tr>
        </thead>
        <tbody>
        <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
        <tr class="text-center">
            {% for field in fields %}
                {% set isKey = false %}
                {% if associations.BelongsTo is defined %}
                    {% for alias, details in associations.BelongsTo %}
                        {% if field == details.foreignKey %}
                            {% set isKey = true %}
                            <td><?= ${{ singularVar }}->has('{{ details.property }}') ?
                                $this->Html->link(${{ singularVar }}->{{ details.property }}
                                ->{{ details.displayField }}, ['controller' => '{{ details.controller }}',
                                'action' => 'view', ${{ singularVar }}->{{ details.property }}
                                ->{{ details.primaryKey[0] }}]) : '' ?>
                            </td>
                        {% endif %}
                    {% endfor %}
                {% endif %}
                {% if isKey is not same as(true) %}
                    {% set columnData = Bake.columnData(field, schema) %}
                    {% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                        <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                    {% elseif columnData.null %}
                        <td><?= ${{ singularVar }}->{{ field }} === null ? '' :
                            $this->Number->format(${{ singularVar }}->{{ field }}) ?>
                        </td>
                    {% else %}
                        <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                    {% endif %}
                {% endif %}
            {% endfor %}
            {% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
            <td class="d-flex justify-content-around">
                <?= $this->Html->link(__('Просмотр'), ['action' => 'view', {{ pk|raw }}], ['class' =>
                'link-dark']) ?>
                <?= $this->Html->link(__('Обновить'), ['action' => 'edit', {{ pk|raw }}], ['class' =>
                'link-success']) ?>
                <?= $this->Form->postLink(__('Delete'), ['action' => 'delete', {{ pk|raw }}], ['confirm'
                => __('Вы уверены, что хотите удалить # {0}?', {{ pk|raw }}), 'class' => 'link-danger',])
                ?>
            </td>
        </tr>
        <?php endforeach; ?>
        </tbody>
    </table>
</div>
<div class="container d-flex align-items-center flex-column mt-2">
    <ul class="pagination">
        <?= $this->Paginator->first('<< ',) ?>
        <?= $this->Paginator->prev(__('--i')) ?>
        <?= $this->Paginator->numbers() ?>
        <?= $this->Paginator->next(__('++i')) ?>
        <?= $this->Paginator->last(' >>') ?>
    </ul>
</div>