{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }} ${{ singularVar }}
 */
?>
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<aside class="mb-3">
    <h3 class="heading"><?= __('Действия') ?></h3>
    <?= $this->Html->link(__('Edit {{ singularHumanName }}'), ['action' => 'edit', {{ pK|raw }}], ['class'
    => 'link-success me-1']) ?>
    <?= $this->Form->postLink(__('Delete {{ singularHumanName }}'), ['action' => 'delete', {{ pK|raw }}],
    ['confirm' => __('Are you sure you want to delete # {0}?', {{ pK|raw }}), 'class' => 'link-danger
    me-1'])
    ?>
    <?= $this->Html->link(__('List {{ pluralHumanName }}'), ['action' => 'index'], ['class' =>
    'link-dark me-1']) ?>
    <?= $this->Html->link(__('New {{ singularHumanName }}'), ['action' => 'add'], ['class' =>
    'link-info']) ?>
    {% set done = [] %}
</aside>
<div class="d-flex flex-column justify-content-start">
    <h2><?= h(${{ singularVar }}->{{ displayField }}) ?></h2>
    <table class="table">
        {% if groupedFields['string'] %}
            {% for field in groupedFields['string'] %}
                {% if associationFields[field] is defined %}
                    {% set details = associationFields[field] %}
                    <tr>
                        <th><?= __('{{ details.property|humanize }}') ?></th>
                        <td><?= ${{ singularVar }}->has('{{ details.property }}') ?
                            $this->Html->link(${{ singularVar }}->{{ details.property }}
                            ->{{ details.displayField }}, ['controller' => '{{ details.controller }}',
                            'action' => 'view', ${{ singularVar }}->{{ details.property }}
                            ->{{ details.primaryKey[0] }}]) : '' ?>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <th><?= __('{{ field|humanize }}') ?></th>
                        <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                    </tr>
                {% endif %}
            {% endfor %}
        {% endif %}
        {% if associations.HasOne %}
            {% for alias, details in associations.HasOne %}
                <tr>
                    <th><?= __('{{ alias|underscore|singularize|humanize }}') ?></th>
                    <td><?= ${{ singularVar }}->has('{{ details.property }}') ?
                        $this->Html->link(${{ singularVar }}->{{ details.property }}
                        ->{{ details.displayField }}, ['controller' => '{{ details.controller }}',
                        'action' => 'view', ${{ singularVar }}->{{ details.property }}
                        ->{{ details.primaryKey[0] }}]) : '' ?>
                    </td>
                </tr>
            {% endfor %}
        {% endif %}
        {% if groupedFields.number %}
            {% for field in groupedFields.number %}
                <tr>
                    <th><?= __('{{ field|humanize }}') ?></th>
                    {% set columnData = Bake.columnData(field, schema) %}
                    {% if columnData.null %}
                        <td><?= ${{ singularVar }}->{{ field }} === null ? '' :
                            $this->Number->format(${{ singularVar }}->{{ field }}) ?>
                        </td>
                    {% else %}
                        <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
                    {% endif %}
                </tr>
            {% endfor %}
        {% endif %}
        {% if groupedFields.date %}
            {% for field in groupedFields.date %}
                <tr class="table-danger">
                    <th><?= __('{{ field|humanize }}') ?></th>
                    <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
                </tr>
            {% endfor %}
        {% endif %}
        {% if groupedFields.boolean %}
            {% for field in groupedFields.boolean %}
                <tr>
                    <th><?= __('{{ field|humanize }}') ?></th>
                    <td><?= ${{ singularVar }}->{{ field }} ? __('Yes') : __('No'); ?></td>
                </tr>
            {% endfor %}
        {% endif %}
    </table>
</div>